/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/tutorial_java_projects.html
 *
 */



plugins {
    // Apply the java plugin to add support for Java
    // id 'java'

    // Apply the application plugin to add support for building an application
    // id 'application'

    id 'war'

    id 'org.gretty' version '2.2.0'


    /// id 'com.bmuschko.docker-remote-api' version '4.10.0'
}

//subprojects {
//    gretty { // Не работает
//        scanInterval = 1 //Scan for changes every second
//        managedClassReload = true //Activate spring-loaded class reloading
//        port = 8082
//        // servletContainer = jetty94
//    }
//}

//task finalize (type: Copy) {
//    doLast {
//        println 'copy war'
//        copy{
//            from ('build/libs/*'){
//                exclude '*.txt'
//            }
//            into 'docker/app'
//        }
//    }
//}

// таска отрабатывает автоматом при запуске gradlew war, но ничего не копируется
task copyWar(type: Copy) {
    println 'copy war into docker folder'
    from('build/libs')
    into('docker/app')
}

// apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

// apply from: 'docker.gradle'

// apply plugin: 'com.bmuschko.docker-remote-api'


// Define the main class for the application
// mainClassName = 'App'

dependencies {

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    // This dependency is found on compile classpath of this component and consumers.
    // compile 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    // testCompile 'junit:junit:4.12'

    //// classpath 'com.bmuschko:gradle-docker-plugin:4.10.0'

    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta0' // version: '1.7.28'

    compile group: 'org.eclipse.jetty', name: 'apache-jstl', version: '9.4.21.v20190926'

}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    // mavenLocal()
    // gradlePluginPortal()
//	maven {
//      url 'https://plugins.gradle.org/m2/'
//    }
}

// Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
gretty {
    scanInterval = 1 //Scan for changes every second
    managedClassReload = true //Activate spring-loaded class reloading
    httpPort = 8082
    servletContainer = 'jetty9.4'
    // inplaceMode = 'soft'
}





